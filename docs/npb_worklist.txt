naif-pds4-bundle worklist by MCS/NAIF
=====================================

Work List:

  Next:

  -- Correct missing module documentation for tests.

  -- Include option to provide plan with kernel names to be mapped or to
     provide kernels from directory with original names.

  -- Agreed to try to enhance the MK generation with whitespaces
     for selected kernels of the same type.

  -- New product for PDS3 archives: MKs in data/mk. To be a copy of the
     extras/mk products with _pds4_ added to the filename with a PATH value
     equal to PDS4 Bundle MKs and with a label containing a list of the kernels
     in the MK provided by SOURCE_PRODUCT_ID, e.g.:
     SOURCE_PRODUCT_ID = {"NAF0000C.BSP","NAF0000C.TLS","NAF0000C.TSC"}

     To be implemented when PDS-EN registry copes with PDS3 data sets.

  -- Implement validate_pds3 to validate index files against data set content.

  -- Implement OREX functional tests -focusing on MKs and kernel mapping.

  Possible:

  -- NOT for this release, and maybe never, but should we consider adding
     a reference from to the LIDVIDs of SPK -- or SPKs -- that were used to
     generate an ORBNUM to its label?

Changelog:


v0.19.0

  -- Important bug that prevents from using mapping kernels with multiple
     fields (for ORX).

     Tests implemented here: test_pds4_orex_list

v0.16.0

  -- For PDS3 first implement generation with MKLABL with the ultimate goal
     to replace it completely with Python code. Log could look something like:

        Processing 'data/ck/mro_mcs_psp_210901_210930.bc':
           label file name: 'data/ck/mro_mcs_psp_210901_210930.lbl'
           comments file name: 'data/ck/mro_mcs_psp_210901_210930.cmt'
           running maklabel ...
           maklabel finished OK.
           running archtype ...
           archtype finished OK. File architecture/type is 'DAF/CK'.
           extracting existing comments from the file ...
           done.
           Found old label(s), cleaning it(them) up ...
           done
           inserting new label into the comments ...
           done.
           writing updated comments and inserting them into the file ...
           done.
           re-writing label file ...
           done.
        processing completed.

v0.15.0

  -- Implement generation of bundles for the ESA SPICE Service with user input
     templates.

v0.14.0

  -- Exceptions due to Coverage because of input kernels not caught. Implement
     function decorators.

  -- Issues from MAVEN release 27:
     * WARNING : -- miscellaneous/checksum/checksum_v027.tab does not have a label.
     * Incorrect release history for last version:
       ERROR   :
       ERROR   : -- Products in /stor/pds4/final/maven/maven_spice/miscellaneous/checksum/checksum_v026.tab do not correspond to the bundle release history
       ERROR   :       miscellaneous/checksum/checksum_v027.tab
       ERROR   :       miscellaneous/collection_miscellaneous_v027.xml
       ERROR   :       miscellaneous/orbnum/maven_orb_rec_210701_211001_v1.orb
       ERROR   :       miscellaneous/checksum/checksum_v026.tab
       ERROR   :       miscellaneous/orbnum/maven_orb_rec_210701_211001_v1.xml
       ERROR   :       miscellaneous/checksum/checksum_v027.xml
       ERROR   :       miscellaneous/checksum/checksum_v026.xml
       ERROR   :       miscellaneous/collection_miscellaneous_inventory_v027.csv
       ERROR   : -- Check generation of Checksum files.

  -- CLEAR argument not working appropriately.

  -- For PDS3 kernel list generation derive version from existing
     kernel list or input plan name.

  -- Implement archive time boundaries tests (there is one sketched in
     configuration).

v0.13.0

  -- Update the coverage determination of MK PER kernel and put a parameter
     to determine whether the MK determines the coverage of the collection
     or not.

  -- Possibility to use the pipeline to only generate kernel labels based on
     list, or on a kernel.

  -- Summary to be included, as per BVS suggestion

      foreach FF ( logical_identifier version_id title description start_date_time stop_date_time file_name file_size md5_checksum object_length kernel_type encoding_type )
         echo -------------------------------------------------------------------------- $FF
         grep $FF `find spice_kernels -name '*.xml' -mtime -1 -print | sort`
      end

  -- Incorporate a validation at the end of the process that reports on
     sensible field such as descriptions, start and stop times, and other
     fields to be considered, this report could be presented as table.

v0.12.0

  -- Issue with the generation of file list for a failed run.

  -- Implement run log file with checksums and the option to obtain checksums
     from this file (rather than from the labels in staging from a previous
     run).

v0.11.2

  -- Update the meta-kernel modification message and remove it from tests
     with the debug argument.

v0.11.1

  -- Agreed to generate another pipeline byproduct with the list
     of files moved to the final area and to add an option in the
     pipleline to remove these files from the final area.

     A similar thing should be done with files in the stagging area.

  -- Agreed to re/test when files are already present in stagging or final
     area.

  -- Evaluate or assess file permissions, changing could be optional.

  -- Bug in coverage determination for SPKs and CKs when multiple bodies
     are present: the body used should be the SPICE ID of the appropriate one.
     (Bug found in M2020).

     So far it has been fixed for SPKs, but not yet for CKs, it is a bit
     unknown if applicable and if it is something that should be sorted out
     via configuration.

v0.11.0

  -- Implement test to figure out why second coverage kernel is not being used.

v0.10.2

  -- Implement coverage tests in master test file.

  -- Implement schema validation for config file as in here:
     https://stackoverflow.com/questions/299588/validating-with-an-xml-schema-in-python

  -- From MAKLABEL, include kernels architecture check.

     C     3) All files that are to have labels generated must have a NAIF
     C        file ID word as the first "word" on the first line of the
     C        file.The SPICE binary kernel files are guaranteed to have
     C        this ID word, but the ASCII text kernels, IK, LSK, PCK, SCLK,
     C        are not. for completeness, the appropriate ID words are listed
     C        here, so that they may be inserted into the ASCII text kernel
     C        files if necessary.
     C
     C           ASCII Text File Type      ID Word
     C           --------------------      --------
     C           IK                        KPL/IK
     C           LSK                       KPL/LSK
     C           PCK                       KPL/PCK
     C           SCLK                      KPL/SCLK
     C           FRAMES                    KPL/FK
     C
     C        The ID words must be the first item in the file, and it
     C        should appear on a line by itself, e.g., suppose we have
     C        a leapseconds text kernel file that is missing the ID word,

v0.6.0 - Generation of LADEE Bundle.

  -- Beware of meta-kernels with "_v" in name besides from version.
  -- Split meta-kernel by year.

v0.5.0 - Generation of MAVEN Bundle with user input meta-kernels.

  -- Add test case for using similar labels from previous increment
     (that is case 2; not the appropriate one).
  -- Files that need a change in the filename to be a configuration item
     (kernel list will then be generated easier).
  -- Label templates for specific information models. Include:
        * 1.5.0.0
        * 1.11.0.0
        * latest model available at the time of implementation
  -- Label templates to be provided by users. Check if exiting use these
     if present.
  -- Convert configuration file to a format similar to NDT or an XML file
     that can be validated against a schematron. JSON can still be used as an
     intermediate format if need be.

v0.4.0 - BVS/NAIF feedback incorporation, first round.

  -- The faucet item of the configuration file to be a parameter instead
  --  Format of the Plan file can be reviewed and made more convenient for
     users.
  -- Kernel List, meta-kernel grammar, meta-kernel template to be part
     of the configuration file.
  -- spiceds template to be versioned, after all it will change continuously.
  -- Step 3 - Bundle/dataset structure generation to include staging area
     reference to make it clear to users.

  -- PCK file needs to be loaded as well. Maybe after all it is just better
     to generate and load a meta-kernel.
  -- Label and product comparison log visualization to be an option. Default
     to be set to false.
  -- Incorporate a comparison of selected files as well (as with the previous
     point, for those subject to user errors from configuration etc.)
  --  URN or LID to be fully configurable (for example KPLO will need that).
  -- Automated documentation to be generated from function and class
     headers with Spynx. This will be useful for developers and for the
     community.
  -- Documentation of the process not to use faketex or any NAIF style instead
     use MD for example.
  -- dsindex files not required for PDS4 archives (update in generation
     index Perl script not really required).

v0.3.0 - Generation of InSight Bundle from existing archive.

v0.2.0 - Generation of a PDS4 Bundle with examples.

v0.1.0 - Generation of kernel lists.
