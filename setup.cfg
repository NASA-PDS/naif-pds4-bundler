[metadata]
name = naif-pds4-bundle
author = Marc Costa Sitja (NAIF/JPL)
author_email = Marc.Costa.Sitja@jpl.nasa.gov
description = The NAIF PDS4 Bundle Generator (naif-pds4-bundle) is a a pipeline that generates a SPICE archive in the shape of a PDS4 Bundle or a PDS3 data set.
long_description = file: README.md
long_description_content_type = text/markdown
license = apache-2.0
keywords = pds, planetary data, various, other, keywords
url = https://github.com/NASA-PDS/naif-pds4-bundle
download_url = https://github.com/NASA-PDS/naif-pds4-bundle/releases/
classifiers =
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    License :: OSI Approved :: Apache Software License
    Operating System :: Unix


[options]
install_requires =
    spiceypy>=4.0.2
    beautifulsoup4>=4.9.3
    numpy>=1.19.4
    setuptools>=50.3.0
    nose
    coverage
    xmlschema
# Change this to False if you use things like __file__ or __path__â€”which you
# shouldn't use anyway, because that's what ``pkg_resources`` is for ðŸ™‚
zip_safe = False
include_package_data = True
package_dir =
    = src
packages = find:
python_requires = >= 3.8

[options.extras_require]
dev =
    black
    flake8
    flake8-bugbear
    flake8-docstrings
    pep8-naming
    mypy
    pydocstyle
    coverage
    pytest
    pytest-cov
    pytest-watch
    pytest-xdist
    pre-commit
    sphinx
    sphinx-rtd-theme
    tox

[options.entry_points]
console_scripts =
    naif-pds4-bundle=naif_pds4_bundle.__main__:main

[options.packages.find]
where = src


[coverage:run]
omit = */_version.py,*/__init__.py


[test]


[tool:pytest]
addopts = -n auto --cov=naif_pds4_bundle


[install]


[flake8]
max-line-length = 120
extend-exclude = versioneer.py,_version.py,docs,tests,setup.py
docstring_convention = google

# Ignoring:
# E203 prevents flake8 from complaining about whitespace around slice
# components. Black formats per PEP8 and flake8 doesn't like some of
# this.
#
# E501 prevents flake8 from complaining line lengths > 79. We will use
# flake8-bugbear's B950 to handle line length lint errors. This trips
# when a line is > max-line-length + 10%.
extend-ignore = E203, E501

# Selects following test categories:
# D: Docstring errors and warnings
# E, W: PEP8 errors and warnings
# F: PyFlakes codes
# N: PEP8 Naming plugin codes
# B: flake8-bugbear codes
# B***: Specific flake8-bugbear opinionated warnings to trigger
#   B902: Invalid first argument used for method. Use self for instance
#       methods, and cls for class methods
#   B903: Use collections.namedtuple (or typing.NamedTuple) for data classes
#       that only set attributes in an __init__ method, and do nothing else.
#   B950: Line too long. This is a pragmatic equivalent of pycodestyle's
#       E501: it considers "max-line-length" but only triggers when the value
#       has been exceeded by more than 10%.
select = D,E,F,N,W,B,B902,B903,B950


[mypy]
# The generic ``mypy`` settings are blank for now, but there are more specific
# options below. Note that the section syntax for ``mypy`` includes
# glob-style wildcards to match file patterns.


[mypy-pds.*._version]
# We don't care about issues in versioneer's files
ignore_errors = True


[versioneer]
VCS                = git
style              = pep440
tag_prefix         = v
versionfile_source = src/naif_pds4_bundle/_version.py
versionfile_build  = src/naif_pds4_bundle/_version.py
parentdir_prefix   = naif_pds4_bundle-
